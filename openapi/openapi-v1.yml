openapi: 3.0.0

info:
  title: KA-Huis REST API
  description: This documentation covers the official REST API of the KA-Huis.
  version: 1.0.0

servers:
  - url: http://acc-ka.jstlwk.dev/v1
    description: Acceptance Environment

components:
  securitySchemes:
    oAuth:
      type: oauth2
      description: This API uses OAuth 2 with the Authorization Code PKCE grant type.
      flows:
        authorizationCode:
          authorizationUrl: http://acc-ka.jstlwk.dev/v1/oauth/authorize
          tokenUrl: http://acc-ka.jstlwk.dev/v1/oauth/token
          refreshUrl: http://acc-ka.jstlwk.dev/v1/oauth/token/refresh
          scopes: { }

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: bigint20
        first_name:
          type: string
        last_name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
      required:
        - id
        - first_nane
        - last_name
        - email
    Reservation:
      type: object
      properties:
        id:
          type: integer
          format: bigint20
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
        space_id:
          type: integer
          format: bigint20
        group_id:
          type: integer
          format: bigint20
        created_by_user_id:
          type: integer
          format: bigint20
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
        created_by_user:
          allOf:
            - $ref: '#/components/schemas/User'
        space:
          allOf:
            - $ref: '#/components/schemas/Space'
        group:
          allOf:
            - $ref: '#/components/schemas/Group'
      required:
        - id
        - starts_at
        - ends_at
        - created_by_user_id

    Group:
      type: object
      properties:
        id:
          type: integer
          format: bigint20
        name:
          type: string
        group_type_id:
          type: integer
          format: bigint20
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
        group_type:
          allOf:
            - $ref: '#/components/schemas/GroupType'
      required:
        - id
        - name
        - group_type_id

    GroupType:
      type: object
      properties:
        id:
          type: integer
          format: bigint20
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
      required:
        - id
        - name

    Space:
      type: object
      properties:
        id:
          type: integer
          format: bigint20
        name:
          type: string
        is_open_for_reservations:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - is_open_for_reservations

    ReperationRequest:
      type: object
      properties:
        id:
          type: integer
          format: bigint20
        name:
          type: string
        description:
          type: string
        priority:
          allOf:
            - $ref: '#/components/schemas/ReparationRequestPriority'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
        reporter_id:
          type: integer
          format: bigint20
        reporter:
          allOf:
            - $ref: '#/components/schemas/User'
      required:
        - id
        - title
        - description

    ReperationRequestMaterial:
      type: object
      properties:
        id:
          type: integer
          format: bigint20
        is_mandatory:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
        reperation_request_id:
          type: integer
          format: bigint20
      required:
        - id
        - is_mandatory

    ReparationRequestPriority:
      type: integer
      description: 'Available values: Low (100), Medium (200), High (300), Highest (400)'
      enum:
        - 100
        - 200
        - 300
        - 400

    PaginationMeta:
      type: object
      properties:
        current_page:
          type: integer
        last_page:
          type: integer
        from:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/PaginationMetaLink'

    PaginationMetaLink:
      type: object
      properties:
        url:
          type: string
        label:
          type: string
        active:
          type: boolean

    PaginationLinks:
      type: object
      properties:
        first:
          type: string
          format: uri
        last:
          type: string
          format: uri
        prev:
          type: string
          format: uri
        next:
          type: string
          format: uri

  responses:
    UnauthorizedResponse:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: This action is unauthorized.
            required:
              - message


security:
  - oAuth: [ ]

paths:
  /groups:
    get:
      summary: Lists groups
      description: >
        Retrieve groups paginated. Filter and sort on defined attributes.
      parameters:
        - in: query
          name: filter[name]
          schema:
            type: string
          description: Query partially on name.
        - in: query
          name: filter[description]
          description: Query partially on description.
        - in: query
          name: filter[is_open_for_reservations]
          description: Query strict on is_open_for_reservations.
        - in: query
          name: sort
          description: >
            Sort the list ascending/descending on various available datetime attributes.

            Allowed properties are:
              - created_at
              - updated_at

            Example:
              - Ascending: ?sort=created_at
              - Descending: ?sort=-created_at
        - in: query
          name: page[number]
          description: The page number that the client is requesting.
        - in: query
          name: page[size]
          description: The number of resources to return per-page.
      responses:
        200:
          description: Succcessful operation
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Group'
                  meta:
                    allOf:
                      - $ref: '#/components/schemas/PaginationMeta'
                  links:
                    allOf:
                      - $ref: '#/components/schemas/PaginationLinks'

        403:
          $ref: '#/components/responses/UnauthorizedResponse'
